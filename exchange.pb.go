// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: exchange.proto

package protoexchange

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseCurrency  string                 `protobuf:"bytes,1,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	Currencies    []string               `protobuf:"bytes,2,rep,name=currencies,proto3" json:"currencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RatesRequest) Reset() {
	*x = RatesRequest{}
	mi := &file_exchange_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatesRequest) ProtoMessage() {}

func (x *RatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatesRequest.ProtoReflect.Descriptor instead.
func (*RatesRequest) Descriptor() ([]byte, []int) {
	return file_exchange_proto_rawDescGZIP(), []int{0}
}

func (x *RatesRequest) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *RatesRequest) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type RatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseCurrency  string                 `protobuf:"bytes,1,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	Rates         map[string]float64     `protobuf:"bytes,2,rep,name=rates,proto3" json:"rates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	Timestamp     string                 `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RatesResponse) Reset() {
	*x = RatesResponse{}
	mi := &file_exchange_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatesResponse) ProtoMessage() {}

func (x *RatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatesResponse.ProtoReflect.Descriptor instead.
func (*RatesResponse) Descriptor() ([]byte, []int) {
	return file_exchange_proto_rawDescGZIP(), []int{1}
}

func (x *RatesResponse) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *RatesResponse) GetRates() map[string]float64 {
	if x != nil {
		return x.Rates
	}
	return nil
}

func (x *RatesResponse) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type ConvertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            string                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertRequest) Reset() {
	*x = ConvertRequest{}
	mi := &file_exchange_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertRequest) ProtoMessage() {}

func (x *ConvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertRequest.ProtoReflect.Descriptor instead.
func (*ConvertRequest) Descriptor() ([]byte, []int) {
	return file_exchange_proto_rawDescGZIP(), []int{2}
}

func (x *ConvertRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ConvertRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ConvertRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type ConvertResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	From            string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To              string                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount          float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	ConvertedAmount float64                `protobuf:"fixed64,4,opt,name=converted_amount,json=convertedAmount,proto3" json:"converted_amount,omitempty"`
	Rate            float64                `protobuf:"fixed64,5,opt,name=rate,proto3" json:"rate,omitempty"`
	Timestamp       string                 `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConvertResponse) Reset() {
	*x = ConvertResponse{}
	mi := &file_exchange_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertResponse) ProtoMessage() {}

func (x *ConvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertResponse.ProtoReflect.Descriptor instead.
func (*ConvertResponse) Descriptor() ([]byte, []int) {
	return file_exchange_proto_rawDescGZIP(), []int{3}
}

func (x *ConvertResponse) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ConvertResponse) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ConvertResponse) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ConvertResponse) GetConvertedAmount() float64 {
	if x != nil {
		return x.ConvertedAmount
	}
	return 0
}

func (x *ConvertResponse) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *ConvertResponse) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_exchange_proto protoreflect.FileDescriptor

const file_exchange_proto_rawDesc = "" +
	"\n" +
	"\x0eexchange.proto\x12\bexchange\"S\n" +
	"\fRatesRequest\x12#\n" +
	"\rbase_currency\x18\x01 \x01(\tR\fbaseCurrency\x12\x1e\n" +
	"\n" +
	"currencies\x18\x02 \x03(\tR\n" +
	"currencies\"\xc6\x01\n" +
	"\rRatesResponse\x12#\n" +
	"\rbase_currency\x18\x01 \x01(\tR\fbaseCurrency\x128\n" +
	"\x05rates\x18\x02 \x03(\v2\".exchange.RatesResponse.RatesEntryR\x05rates\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\x1a8\n" +
	"\n" +
	"RatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"L\n" +
	"\x0eConvertRequest\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"\xaa\x01\n" +
	"\x0fConvertResponse\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12)\n" +
	"\x10converted_amount\x18\x04 \x01(\x01R\x0fconvertedAmount\x12\x12\n" +
	"\x04rate\x18\x05 \x01(\x01R\x04rate\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\tR\ttimestamp2\x87\x01\n" +
	"\bCurrency\x12;\n" +
	"\bGetRates\x12\x16.exchange.RatesRequest\x1a\x17.exchange.RatesResponse\x12>\n" +
	"\aConvert\x12\x18.exchange.ConvertRequest\x1a\x19.exchange.ConvertResponseB%Z#github.com/gipnozhard/protoexchangeb\x06proto3"

var (
	file_exchange_proto_rawDescOnce sync.Once
	file_exchange_proto_rawDescData []byte
)

func file_exchange_proto_rawDescGZIP() []byte {
	file_exchange_proto_rawDescOnce.Do(func() {
		file_exchange_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_exchange_proto_rawDesc), len(file_exchange_proto_rawDesc)))
	})
	return file_exchange_proto_rawDescData
}

var file_exchange_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_exchange_proto_goTypes = []any{
	(*RatesRequest)(nil),    // 0: exchange.RatesRequest
	(*RatesResponse)(nil),   // 1: exchange.RatesResponse
	(*ConvertRequest)(nil),  // 2: exchange.ConvertRequest
	(*ConvertResponse)(nil), // 3: exchange.ConvertResponse
	nil,                     // 4: exchange.RatesResponse.RatesEntry
}
var file_exchange_proto_depIdxs = []int32{
	4, // 0: exchange.RatesResponse.rates:type_name -> exchange.RatesResponse.RatesEntry
	0, // 1: exchange.Currency.GetRates:input_type -> exchange.RatesRequest
	2, // 2: exchange.Currency.Convert:input_type -> exchange.ConvertRequest
	1, // 3: exchange.Currency.GetRates:output_type -> exchange.RatesResponse
	3, // 4: exchange.Currency.Convert:output_type -> exchange.ConvertResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_exchange_proto_init() }
func file_exchange_proto_init() {
	if File_exchange_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_exchange_proto_rawDesc), len(file_exchange_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_exchange_proto_goTypes,
		DependencyIndexes: file_exchange_proto_depIdxs,
		MessageInfos:      file_exchange_proto_msgTypes,
	}.Build()
	File_exchange_proto = out.File
	file_exchange_proto_goTypes = nil
	file_exchange_proto_depIdxs = nil
}
